docs[["1"]][["content"]]
filePath <- "http://www.sthda.com/sthda/RDoc/example-files/martin-luther-king-i-have-a-dream-speech.txt"
text <- readLines(filePath)
docs <- Corpus(VectorSource(text))
View(docs)
View(docs)
inspect(docs)
docs <- Corpus(VectorSource(data))
View(docs)
docs <- tm_map(docs, content_transformer(tolower))
View(docs)
docs <- tm_map(docs, removeNumbers)
docs <- tm_map(docs, removeWords, stopwords("english"))
docs <- tm_map(docs, removePunctuation)
docs <- tm_map(docs, stripWhitespace)
docs <- tm_map(docs, stemDocument)
docs <- tm_map(docs, PlainTextDocument)
dtm <- TermDocumentMatrix(docs)
m <- as.matrix(dtm)
v <- sort(rowSums(m),decreasing=TRUE)
d <- data.frame(word = names(v),freq=v)
head(d, 10)
View(docs)
View(d)
class(data)
data <- df$Title
data
docs <- Corpus(VectorSource(data))
docs <- tm_map(docs, content_transformer(tolower))
View(docs)
docs <- tm_map(docs, removeNumbers)
docs <- tm_map(docs, removeWords, stopwords("english"))
docs <- tm_map(docs, removePunctuation)
docs <- tm_map(docs, stripWhitespace)
docs <- tm_map(docs, stemDocument)
docs <- tm_map(docs, PlainTextDocument)
dtm <- TermDocumentMatrix(docs)
data <- toString(df$Title)
data
data <- gsub('[[:punct:] ]+',' ',data)
data
data <- gsub('[[:punct:] ]+',' ',data)
data
data <- toString(df$Title)
qq <- str_replace_all(data, "[[:punct:]]", " ")
library(stringr)
qq <- str_replace_all(data, "[[:punct:]]", " ")
qq
data <- str_replace_all(data, "[[:punct:]]", " ")
library(NLP)
library(tm)
library(wordcloud)
library(RColorBrewer)
library(SnowballC)
docs <- Corpus(VectorSource(data))
docs <- tm_map(docs, content_transformer(tolower))
docs <- tm_map(docs, removeNumbers)
docs <- tm_map(docs, removeWords, stopwords("english"))
docs <- tm_map(docs, removePunctuation)
docs <- tm_map(docs, stripWhitespace)
docs <- tm_map(docs, stemDocument)
docs <- tm_map(docs, PlainTextDocument)
dtm <- TermDocumentMatrix(docs)
m <- as.matrix(dtm)
v <- sort(rowSums(m),decreasing=TRUE)
d <- data.frame(word = names(v),freq=v)
View(d)
docs <- Corpus(VectorSource(data), readerControl = list(reader=readPlain, language="en"))
docs <- tm_map(docs, content_transformer(tolower))
View(docs)
docs[["1"]][["content"]]
docs <- tm_map(docs, removeNumbers)
docs[["1"]][["content"]]
docs <- tm_map(docs, removeWords, stopwords("english"))
docs[["1"]][["content"]]
docs <- tm_map(docs, stripWhitespace)
docs[["1"]][["content"]]
dtm <- TermDocumentMatrix(docs)
m <- as.matrix(dtm)
v <- sort(rowSums(m),decreasing=TRUE)
d <- data.frame(word = names(v),freq=v)
View(d)
head(d, 10)
head(d, 20)
set.seed(1234)
View(d)
wordcloud(words = d$word, freq = d$freq, min.freq = 10,
max.words=550, random.order=FALSE, rot.per=0.35,
colors=rev(colorRampPalette(brewer.pal(9,"Blues"))(32)[seq(8,32,6)]))
blog_wordcloud <- function(year){
temp_df <- year_blogs(year)
df <- temp_df[!duplicated(temp_df$Title),]
data <- toString(df$Title)
data <- str_replace_all(data, "[[:punct:]]", " ")
docs <- Corpus(VectorSource(data), readerControl = list(reader=readPlain, language="en"))
docs <- tm_map(docs, content_transformer(tolower))
docs <- tm_map(docs, removeNumbers)
docs <- tm_map(docs, removeWords, stopwords("english"))
docs <- tm_map(docs, stripWhitespace)
dtm <- TermDocumentMatrix(docs)
m <- as.matrix(dtm)
v <- sort(rowSums(m),decreasing=TRUE)
d <- data.frame(word = names(v),freq=v)
head(d, 20)
set.seed(1234)
wordcloud(words = d$word, freq = d$freq, min.freq = 10,
max.words=550, random.order=FALSE, rot.per=0.35,
colors=rev(colorRampPalette(brewer.pal(9,"Blues"))(32)[seq(8,32,6)]))
}
blog_wordcloud(2019)
wordcloud(words = d$word, freq = d$freq, min.freq = 1,
max.words=500, random.order=FALSE, rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
View(d)
wordcloud(words = d$word, freq = d$freq, min.freq = 40,
max.words=550, random.order=FALSE, rot.per=0.35,
colors=rev(colorRampPalette(brewer.pal(9,"Blues"))(32)[seq(8,32,6)]))
wordcloud(words = d$word, freq = d$freq, min.freq = 20,
max.words=550, random.order=FALSE, rot.per=0.35,
colors=rev(colorRampPalette(brewer.pal(9,"Blues"))(32)[seq(8,32,6)]))
wordcloud(words = d$word, freq = d$freq, min.freq = 10,
max.words=550, random.order=FALSE, rot.per=0.35,
colors=rev(colorRampPalette(brewer.pal(9,"Blues"))(32)[seq(8,32,6)]))
wordcloud(words = d$word, freq = d$freq, min.freq = 1,
max.words=550, random.order=FALSE, rot.per=0.35,
colors=rev(colorRampPalette(brewer.pal(9,"Blues"))(32)[seq(8,32,6)]))
wordcloud(words = d$word, freq = d$freq, min.freq = 10,
max.words=550, random.order=FALSE, rot.per=0.35,
colors=rev(colorRampPalette(brewer.pal(9,"Blues"))(32)[seq(8,32,6)]))
wordcloud(words = d$word, freq = d$freq, min.freq = 41,
max.words=550, random.order=FALSE, rot.per=0.35,
colors=rev(colorRampPalette(brewer.pal(9,"Blues"))(32)[seq(8,32,6)]))
wordcloud(words = d$word, freq = d$freq, min.freq = 31,
max.words=550, random.order=FALSE, rot.per=0.35,
colors=rev(colorRampPalette(brewer.pal(9,"Blues"))(32)[seq(8,32,6)]))
wordcloud(words = d$word, freq = d$freq, min.freq = 20,
max.words=550, random.order=FALSE, rot.per=0.35,
colors=rev(colorRampPalette(brewer.pal(9,"Blues"))(32)[seq(8,32,6)]))
wordcloud(words = d$word, freq = d$freq, min.freq = 15,
max.words=550, random.order=FALSE, rot.per=0.35,
colors=rev(colorRampPalette(brewer.pal(9,"Blues"))(32)[seq(8,32,6)]))
rm(list = ls())
## Version 2
library(rvest)
library(purrr)
# month wise function - combines full data into data-frame for that particular month and year as input
month_blogs <- function(year, month){
ym_wbpg <- "https://www.r-bloggers.com/%d/%d/"
ym_wbpg <- sprintf(ym_wbpg, year, month)
temp_wbpg <- paste0(ym_wbpg, "page/2/")
xpage <- read_html(temp_wbpg)
pg_ym_max <- xpage %>%
html_nodes(".dots+ .page-numbers") %>%
html_text()
pg_ym_max <- 1:as.numeric(gsub(",", "", pg_ym_max))
remove(temp_wbpg)
surf_wbpg <- paste0(ym_wbpg, "page/%d/")
map_df(pg_ym_max, function(i){
page <- read_html(sprintf(surf_wbpg, i))
blog_title <- page %>%
html_nodes(".loop-title a") %>%
html_text()
blog_author <- page %>%
html_nodes(".fn") %>%
html_text()
blog_date <- page %>%
html_nodes(".meta") %>%
html_text()
blog_date <- gsub(" \\|.*","",blog_date)
author_blogs_hyperlink <- page %>%
html_nodes("[class='fn']") %>%
html_attr("href")
data.frame(Title = blog_title,
Date = blog_date,
Author = blog_author,
Author_Hyperlink = author_blogs_hyperlink)
}) -> Month_Blog_Information
Month_Blog_Information
}
d <- month_blogs(2020, 1)
View(d)
# year wise function - combines full data into data-frame for that particular year as input
year_blogs <- function(year_date){
map_df(1:12, function(i){
month_blogs(year = year_date, month = i)
}) -> Year_Blog_Information
Year_Blog_Information
}
library(stringr)
library(NLP)
library(tm)
library(wordcloud)
library(RColorBrewer)
library(SnowballC)
blog_wordcloud <- function(year){
temp_df <- year_blogs(year)
df <- temp_df[!duplicated(temp_df$Title),]
data <- toString(df$Title)
data <- str_replace_all(data, "[[:punct:]]", " ")
docs <- Corpus(VectorSource(data), readerControl = list(reader=readPlain, language="en"))
docs <- tm_map(docs, content_transformer(tolower))
docs <- tm_map(docs, removeNumbers)
docs <- tm_map(docs, removeWords, stopwords("english"))
docs <- tm_map(docs, stripWhitespace)
dtm <- TermDocumentMatrix(docs)
m <- as.matrix(dtm)
v <- sort(rowSums(m),decreasing=TRUE)
d <- data.frame(word = names(v),freq=v)
head(d, 20)
set.seed(1234)
wordcloud(words = d$word, freq = d$freq, min.freq = 10,
max.words=550, random.order=FALSE, rot.per=0.35,
colors=rev(colorRampPalette(brewer.pal(9,"Blues"))(32)[seq(8,32,6)]))
}
setwd("~/GitHub/R-Community-Analysis")
temp_df <- year_blogs(2020)
df <- temp_df[!duplicated(temp_df$Title),]
data <- toString(df$Title)
data <- str_replace_all(data, "[[:punct:]]", " ")
docs <- Corpus(VectorSource(data), readerControl = list(reader=readPlain, language="en"))
docs <- tm_map(docs, content_transformer(tolower))
docs <- tm_map(docs, removeNumbers)
docs <- tm_map(docs, removeWords, stopwords("english"))
docs <- tm_map(docs, stripWhitespace)
dtm <- TermDocumentMatrix(docs)
m <- as.matrix(dtm)
v <- sort(rowSums(m),decreasing=TRUE)
d <- data.frame(word = names(v),freq=v)
head(d, 20)
set.seed(1234)
a <- wordcloud(words = d$word, freq = d$freq, min.freq = 15,
max.words=550, random.order=FALSE, rot.per=0.35,
colors=rev(colorRampPalette(brewer.pal(9,"Blues"))(32)[seq(8,32,6)]))
a = wordcloud(words = d$word, freq = d$freq, min.freq = 15,
max.words=550, random.order=FALSE, rot.per=0.35,
colors=rev(colorRampPalette(brewer.pal(9,"Blues"))(32)[seq(8,32,6)]))
a
ggplot(data=d, aes(x=word, y=freq)) +
geom_bar(stat="identity", fill="steelblue")+
geom_text(aes(label=freq), vjust=-0.3, size=2.5)+
theme_minimal()+
theme(axis.text.x=element_text(angle=90, hjust=1))+
labs(title = "Top title words for Blogs posted on R-Bloggers",
x = "Words", y = "Frequency of Words")
library(ggplot2)
ggplot(data=d, aes(x=word, y=freq)) +
geom_bar(stat="identity", fill="steelblue")+
geom_text(aes(label=freq), vjust=-0.3, size=2.5)+
theme_minimal()+
theme(axis.text.x=element_text(angle=90, hjust=1))+
labs(title = "Top title words for Blogs posted on R-Bloggers",
x = "Words", y = "Frequency of Words")
kk <- head(d, 20)
ggplot(data=kk, aes(x=word, y=freq)) +
geom_bar(stat="identity", fill="steelblue")+
geom_text(aes(label=freq), vjust=-0.3, size=2.5)+
theme_minimal()+
theme(axis.text.x=element_text(angle=90, hjust=1))+
labs(title = "Top title words for Blogs posted on R-Bloggers",
x = "Words", y = "Frequency of Words")
t <- ggplot(data=kk, aes(x=word, y=freq)) +
geom_bar(stat="identity", fill="steelblue")+
geom_text(aes(label=freq), vjust=-0.3, size=2.5)+
theme_minimal()+
theme(axis.text.x=element_text(angle=90, hjust=1))+
labs(title = "Top title words for Blogs posted on R-Bloggers",
x = "Words", y = "Frequency of Words")
t
View(kk)
t <- ggplot(data=kk, aes(x=reorder(word, -freq), y=freq)) +
geom_bar(stat="identity", fill="steelblue")+
geom_text(aes(label=freq), vjust=-0.3, size=2.5)+
theme_minimal()+
theme(axis.text.x=element_text(angle=90, hjust=1))+
labs(title = "Top title words for blogs posted on R-Bloggers",
x = "Words", y = "Frequency of Words")
t
plot1 <- ggplot(data=kk, aes(x=reorder(word, -freq), y=freq)) +
geom_bar(stat="identity", fill="steelblue")+
geom_text(aes(label=freq), vjust=-0.3, size=2.5)+
theme_minimal()+
theme(axis.text.x=element_text(angle=90, hjust=1))+
labs(title = "Top title words for blogs posted on R-Bloggers",
x = "Words", y = "Frequency of Words")
list(plot1,
wordcloud(words = d$word, freq = d$freq, min.freq = 15,
max.words=550, random.order=FALSE, rot.per=0.35,
colors=rev(colorRampPalette(brewer.pal(9,"Blues"))(32)[seq(8,32,6)])))
list(plot1,
wordcloud(words = d$word, freq = d$freq, min.freq = 15,
max.words=550, random.order=FALSE, rot.per=0.35,
colors=rev(colorRampPalette(brewer.pal(9,"Blues"))(32)[seq(8,32,6)])))
blog_wordcloud <- function(year){
temp_df <- year_blogs(year)
df <- temp_df[!duplicated(temp_df$Title),]
data <- toString(df$Title)
data <- str_replace_all(data, "[[:punct:]]", " ")
docs <- Corpus(VectorSource(data), readerControl = list(reader=readPlain, language="en"))
docs <- tm_map(docs, content_transformer(tolower))
docs <- tm_map(docs, removeNumbers)
docs <- tm_map(docs, removeWords, stopwords("english"))
docs <- tm_map(docs, stripWhitespace)
dtm <- TermDocumentMatrix(docs)
m <- as.matrix(dtm)
v <- sort(rowSums(m),decreasing=TRUE)
d <- data.frame(word = names(v),freq=v)
top_words <- head(d, 20)
plot1 <- ggplot(data=top_words, aes(x=reorder(word, -freq), y=freq)) +
geom_bar(stat="identity", fill="steelblue")+
geom_text(aes(label=freq), vjust=-0.3, size=2.5)+
theme_minimal()+
theme(axis.text.x=element_text(angle=90, hjust=1))+
labs(title = "Top title words for blogs posted on R-Bloggers",
x = "Words", y = "Frequency of Words")
set.seed(1234)
list(plot1,
wordcloud(words = d$word, freq = d$freq, min.freq = 15,
max.words=550, random.order=FALSE, rot.per=0.35,
colors=rev(colorRampPalette(brewer.pal(9,"Blues"))(32)[seq(8,32,6)])))
}
blog_wordcloud(2019)
View(d)
temp_df <- year_blogs(2019)
df <- temp_df[!duplicated(temp_df$Title),]
data <- toString(df$Title)
data <- str_replace_all(data, "[[:punct:]]", " ")
docs <- Corpus(VectorSource(data), readerControl = list(reader=readPlain, language="en"))
View(docs)
docs[["1"]][["content"]]
docs <- tm_map(docs, content_transformer(tolower))
docs[["1"]][["content"]]
docs <- Corpus(VectorSource(data), readerControl = list(reader=readPlain, language="en"))
docs[["1"]][["content"]]
docs <- tm_map(docs, content_transformer(tolower))
docs[["1"]][["content"]]
docs <- Corpus(VectorSource(data), readerControl = list(reader=readPlain, language="en"))
data
tolower(data)
data <- tolower(data)
data <- toString(df$Title)
data <- tolower(data)
data <- str_replace_all(data, "[[:punct:]]", " ")
data
data <- str_replace_all(data, "[^[:alnum:]]", " ")
data
data  <- gsub("[^0-9A-Za-z///' ]"," " , data ,ignore.case = TRUE)
data
data <- toString(df$Title)
data <- tolower(data)
data
data  <- gsub("[^0-9A-Za-z///' ]"," " , data ,ignore.case = TRUE)
data
docs <- Corpus(VectorSource(data), readerControl = list(reader=readPlain, language="en"))
docs <- tm_map(docs, removeNumbers)
docs[["1"]][["content"]]
docs <- tm_map(docs, removeWords, stopwords("english"))
docs[["1"]][["content"]]
docs <- tm_map(docs, stripWhitespace)
docs[["1"]][["content"]]
dtm <- TermDocumentMatrix(docs)
m <- as.matrix(dtm)
v <- sort(rowSums(m),decreasing=TRUE)
d <- data.frame(word = names(v),freq=v)
head(d, 20)
blog_wordcloud <- function(year){
temp_df <- year_blogs(year)
df <- temp_df[!duplicated(temp_df$Title),]
data <- toString(df$Title)
data <- tolower(data)
data  <- gsub("[^0-9A-Za-z///' ]"," " , data ,ignore.case = TRUE)
docs <- Corpus(VectorSource(data), readerControl = list(reader=readPlain, language="en"))
docs <- tm_map(docs, removeNumbers)
docs <- tm_map(docs, removeWords, stopwords("english"))
docs <- tm_map(docs, stripWhitespace)
dtm <- TermDocumentMatrix(docs)
m <- as.matrix(dtm)
v <- sort(rowSums(m),decreasing=TRUE)
d <- data.frame(word = names(v),freq=v)
top_words <- head(d, 20)
plot1 <- ggplot(data=top_words, aes(x=reorder(word, -freq), y=freq)) +
geom_bar(stat="identity", fill="steelblue")+
geom_text(aes(label=freq), vjust=-0.3, size=2.5)+
theme_minimal()+
theme(axis.text.x=element_text(angle=90, hjust=1))+
labs(title = "Top title words for blogs posted on R-Bloggers",
x = "Words", y = "Frequency of Words")
set.seed(1234)
list(plot1,
wordcloud(words = d$word, freq = d$freq, min.freq = 15,
max.words=550, random.order=FALSE, rot.per=0.35,
colors=rev(colorRampPalette(brewer.pal(9,"Blues"))(32)[seq(8,32,6)])))
}
blog_wordcloud(2020)
blog_wordcloud(2019)
setwd("~/GitHub/R-Community-Analysis")
a <- "Hello"
b<- "Meet"
append(a, b)
path <- paste0("StackExch_data/Questions/",end_year,"/",end_year,"_Combined.rds")
library(raster)
start_year <- 2008
end_year <- 2020
year <- start_year:end_year
path <- paste0("StackExch_data/Questions/",end_year,"/",end_year,"_Combined.rds")
temp_df <- readRDS(file = path)
View(temp_df)
data <- toString(temp_df$Title)
data
paste(a,b)
str <- ""
str = paste(str, temp)
str = paste(str, data)
str <- tolower(str)
str  <- gsub("[^0-9A-Za-z///' ]", " ", str, ignore.case = TRUE)
str
docs <- Corpus(VectorSource(str), readerControl = list(reader=readPlain, language="en"))
docs <- tm_map(docs, removeNumbers)
docs <- tm_map(docs, removeWords, stopwords("english"))
docs <- tm_map(docs, stripWhitespace)
dtm <- TermDocumentMatrix(docs)
m <- as.matrix(dtm)
v <- sort(rowSums(m),decreasing=TRUE)
d <- data.frame(word = names(v),freq=v)
View(d)
top_words <- head(d, 20)
plot1 <- ggplot(data=top_words, aes(x=reorder(word, -freq), y=freq)) +
geom_bar(stat="identity", fill="steelblue")+
geom_text(aes(label=freq), vjust=-0.3, size=2.5)+
theme_minimal()+
theme(axis.text.x=element_text(angle=90, hjust=1))+
labs(title = "Top title words for blogs posted on R-Bloggers",
x = "Words", y = "Frequency of Words")
plot1
wordcloud(words = d$word, freq = d$freq, min.freq = 15,
max.words=550, random.order=FALSE, rot.per=0.35,
colors=rev(colorRampPalette(brewer.pal(9,"Blues"))(32)[seq(8,32,6)]))
year <- start_year:end_year
str <- ""
i <- 1
repeat{
path <- paste0("StackExch_data/Questions/",year[i],"/",year[i],"_Combined.rds")
temp_df <- readRDS(file = path)
data <- toString(temp_df$Title)
str <- paste(str, data)
i <- i+1
if(i>length(year)){
break
}
}
str
str <- tolower(str)
str  <- gsub("[^0-9A-Za-z///' ]", " ", str, ignore.case = TRUE)
docs <- Corpus(VectorSource(str), readerControl = list(reader=readPlain, language="en"))
docs <- tm_map(docs, removeNumbers)
docs <- tm_map(docs, removeWords, stopwords("english"))
docs <- tm_map(docs, stripWhitespace)
dtm <- TermDocumentMatrix(docs)
m <- as.matrix(dtm)
v <- sort(rowSums(m),decreasing=TRUE)
d <- data.frame(word = names(v),freq=v)
View(d)
top_words <- head(d, 20)
plot1 <- ggplot(data=top_words, aes(x=reorder(word, -freq), y=freq)) +
geom_bar(stat="identity", fill="steelblue")+
geom_text(aes(label=freq), vjust=-0.3, size=2.5)+
theme_minimal()+
theme(axis.text.x=element_text(angle=90, hjust=1))+
labs(title = "Top title words for Questions posted on StackOverflow",
x = "Words", y = "Frequency of Words")
plot1
set.seed(1234)
wordcloud(words = d$word, freq = d$freq, min.freq = 1000,
max.words=1000000, random.order=FALSE, rot.per=0.35,
colors=rev(colorRampPalette(brewer.pal(9,"Blues"))(32)[seq(8,32,6)]))
ques_barplot_wordcloud <- function(start_year, end_year){
year <- start_year:end_year
str <- ""
i <- 1
repeat{
path <- paste0("StackExch_data/Questions/",year[i],"/",year[i],"_Combined.rds")
temp_df <- readRDS(file = path)
data <- toString(temp_df$Title)
str <- paste(str, data)
i <- i+1
if(i>length(year)){
break
}
}
str <- tolower(str)
str  <- gsub("[^0-9A-Za-z///' ]", " ", str, ignore.case = TRUE)
docs <- Corpus(VectorSource(str), readerControl = list(reader=readPlain, language="en"))
docs <- tm_map(docs, removeNumbers)
docs <- tm_map(docs, removeWords, stopwords("english"))
docs <- tm_map(docs, stripWhitespace)
dtm <- TermDocumentMatrix(docs)
m <- as.matrix(dtm)
v <- sort(rowSums(m),decreasing=TRUE)
d <- data.frame(word = names(v),freq=v)
top_words <- head(d, 20)
plot1 <- ggplot(data=top_words, aes(x=reorder(word, -freq), y=freq)) +
geom_bar(stat="identity", fill="steelblue")+
geom_text(aes(label=freq), vjust=-0.3, size=2.5)+
theme_minimal()+
theme(axis.text.x=element_text(angle=90, hjust=1))+
labs(title = "Top title words for Questions posted on StackOverflow",
x = "Words", y = "Frequency of Words")
set.seed(1234)
list(plot1,
wordcloud(words = d$word, freq = d$freq, min.freq = 1000,
max.words=1000000, random.order=FALSE, rot.per=0.35,
colors=rev(colorRampPalette(brewer.pal(9,"Blues"))(32)[seq(8,32,6)])))
}
